{"uid":"2b89ea50252f5d2e","name":"ConnectAndRunCbytes","historyId":"FirFilterTest:FirFilterTest#ConnectAndRunCbytes","time":{"start":1734688546312,"stop":1734688546312,"duration":0},"status":"failed","statusMessage":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","statusTrace":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"FirFilterTest"},{"name":"testClass","value":"FirFilterTest"},{"name":"package","value":"FirFilterTest"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"869220c224d3288e","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734687850347,"stop":1734687850347,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":19},"items":[{"uid":"556289210c19c17a","reportUrl":"https://xguerreropau.github.io/gnss-sdr/19//#testresult/556289210c19c17a","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"30b66dc55a3196b5","reportUrl":"https://xguerreropau.github.io/gnss-sdr/18//#testresult/30b66dc55a3196b5","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"7885ff14999f5604","reportUrl":"https://xguerreropau.github.io/gnss-sdr/17//#testresult/7885ff14999f5604","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"54f780dbc6a7d1f4","reportUrl":"https://xguerreropau.github.io/gnss-sdr/16//#testresult/54f780dbc6a7d1f4","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"85c9783fede4b2ae","reportUrl":"https://xguerreropau.github.io/gnss-sdr/15//#testresult/85c9783fede4b2ae","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"f4289f0bb300c958","reportUrl":"https://xguerreropau.github.io/gnss-sdr/14//#testresult/f4289f0bb300c958","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"a20cc67d003dff45","reportUrl":"https://xguerreropau.github.io/gnss-sdr/13//#testresult/a20cc67d003dff45","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"20743eba332fe392","reportUrl":"https://xguerreropau.github.io/gnss-sdr/12//#testresult/20743eba332fe392","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"db1f4bc2267a6561","reportUrl":"https://xguerreropau.github.io/gnss-sdr/11//#testresult/db1f4bc2267a6561","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"c81ec94823117fa7","reportUrl":"https://xguerreropau.github.io/gnss-sdr/10//#testresult/c81ec94823117fa7","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"44d49bb1ed30ce82","reportUrl":"https://xguerreropau.github.io/gnss-sdr/9//#testresult/44d49bb1ed30ce82","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"5eb9239f5a577f5","reportUrl":"https://xguerreropau.github.io/gnss-sdr/8//#testresult/5eb9239f5a577f5","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"52c61e287ef3fb59","reportUrl":"https://xguerreropau.github.io/gnss-sdr/7//#testresult/52c61e287ef3fb59","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"2b3ccb081feda319","reportUrl":"https://xguerreropau.github.io/gnss-sdr/6//#testresult/2b3ccb081feda319","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"fa75d09f7308a6b4","reportUrl":"https://xguerreropau.github.io/gnss-sdr/3//#testresult/fa75d09f7308a6b4","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"f7059b25b875f20a","reportUrl":"https://xguerreropau.github.io/gnss-sdr/2//#testresult/f7059b25b875f20a","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"d15ff6e96f5bc23f","reportUrl":"https://xguerreropau.github.io/gnss-sdr/1//#testresult/d15ff6e96f5bc23f","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"adf4462b788c5fcc","reportUrl":"https://xguerreropau.github.io/gnss-sdr/32//#testresult/adf4462b788c5fcc","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:330\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}}]},"tags":[]},"source":"2b89ea50252f5d2e.json","parameterValues":[]}