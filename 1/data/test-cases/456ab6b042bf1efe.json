{"uid":"456ab6b042bf1efe","name":"ValidationOfResults","historyId":"GalileoE1PcpsAmbiguousAcquisitionGSoCTest:GalileoE1PcpsAmbiguousAcquisitionGSoCTest#ValidationOfResults","time":{"start":1734688546120,"stop":1734688546124,"duration":4},"status":"failed","statusMessage":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","statusTrace":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"GalileoE1PcpsAmbiguousAcquisitionGSoCTest"},{"name":"testClass","value":"GalileoE1PcpsAmbiguousAcquisitionGSoCTest"},{"name":"package","value":"GalileoE1PcpsAmbiguousAcquisitionGSoCTest"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c6cb63a2f891aa5b","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734687850115,"stop":1734687850120,"duration":5}},{"uid":"c7ad40824d59d3af","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976367,"stop":1734449976372,"duration":5}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"37200ba1b9c74309","reportUrl":"https://xguerreropau.github.io/gnss-sdr/32//#testresult/37200ba1b9c74309","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734688546120,"stop":1734688546124,"duration":4}},{"uid":"46c167ebfcf581d","reportUrl":"https://xguerreropau.github.io/gnss-sdr/31//#testresult/46c167ebfcf581d","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976367,"stop":1734449976372,"duration":5}},{"uid":"6f251977272817df","reportUrl":"https://xguerreropau.github.io/gnss-sdr/30//#testresult/6f251977272817df","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976367,"stop":1734449976372,"duration":5}},{"uid":"a0a5f28d797e6ca1","reportUrl":"https://xguerreropau.github.io/gnss-sdr/29//#testresult/a0a5f28d797e6ca1","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976367,"stop":1734449976372,"duration":5}},{"uid":"70caa4e5171930c7","reportUrl":"https://xguerreropau.github.io/gnss-sdr/28//#testresult/70caa4e5171930c7","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_gsoc_test.cc:290\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976367,"stop":1734449976372,"duration":5}}]},"tags":[]},"source":"456ab6b042bf1efe.json","parameterValues":[]}