{"uid":"4519159107413bc7","name":"ConnectAndRunCshorts","historyId":"FirFilterTest:FirFilterTest#ConnectAndRunCshorts","time":{"start":1734688546312,"stop":1734688546312,"duration":0},"status":"failed","statusMessage":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","statusTrace":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"FirFilterTest"},{"name":"testClass","value":"FirFilterTest"},{"name":"package","value":"FirFilterTest"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7b91e59219894a72","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734687850347,"stop":1734687850347,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":16},"items":[{"uid":"57bef508c19ef1c3","reportUrl":"https://xguerreropau.github.io/gnss-sdr/16//#testresult/57bef508c19ef1c3","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"18b09e36ed73fcd8","reportUrl":"https://xguerreropau.github.io/gnss-sdr/15//#testresult/18b09e36ed73fcd8","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"f7404177bc96ee4c","reportUrl":"https://xguerreropau.github.io/gnss-sdr/14//#testresult/f7404177bc96ee4c","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"a99fc2d556e51b37","reportUrl":"https://xguerreropau.github.io/gnss-sdr/13//#testresult/a99fc2d556e51b37","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"b2e7060156d3b422","reportUrl":"https://xguerreropau.github.io/gnss-sdr/12//#testresult/b2e7060156d3b422","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"77615747c020c41b","reportUrl":"https://xguerreropau.github.io/gnss-sdr/11//#testresult/77615747c020c41b","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"f5dbbfaa946f2838","reportUrl":"https://xguerreropau.github.io/gnss-sdr/10//#testresult/f5dbbfaa946f2838","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"7a28e2ea4655a380","reportUrl":"https://xguerreropau.github.io/gnss-sdr/9//#testresult/7a28e2ea4655a380","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"4849c337f22d060a","reportUrl":"https://xguerreropau.github.io/gnss-sdr/8//#testresult/4849c337f22d060a","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"25169f6fc8eef450","reportUrl":"https://xguerreropau.github.io/gnss-sdr/7//#testresult/25169f6fc8eef450","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"8192b62a31fb8f85","reportUrl":"https://xguerreropau.github.io/gnss-sdr/6//#testresult/8192b62a31fb8f85","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"79775eb66174259","reportUrl":"https://xguerreropau.github.io/gnss-sdr/3//#testresult/79775eb66174259","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"90830102d67ab45","reportUrl":"https://xguerreropau.github.io/gnss-sdr/2//#testresult/90830102d67ab45","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"ad234bde2309f350","reportUrl":"https://xguerreropau.github.io/gnss-sdr/1//#testresult/ad234bde2309f350","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"baa5daceace88a7f","reportUrl":"https://xguerreropau.github.io/gnss-sdr/32//#testresult/baa5daceace88a7f","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:285\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_short_to_complex_short_sptr ishort_to_cshort_ = make_interleaved_short_to_complex_short(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ishort_to_cshort_, 0); top_block->connect(ishort_to_cshort_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}}]},"tags":[]},"source":"4519159107413bc7.json","parameterValues":[]}