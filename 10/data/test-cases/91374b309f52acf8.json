{"uid":"91374b309f52acf8","name":"ConnectAndRunCbyteGrcomplex","historyId":"FirFilterTest:FirFilterTest#ConnectAndRunCbyteGrcomplex","time":{"start":1734688546312,"stop":1734688546312,"duration":0},"status":"failed","statusMessage":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","statusTrace":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"FirFilterTest"},{"name":"testClass","value":"FirFilterTest"},{"name":"package","value":"FirFilterTest"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"db3a5c094d5d1457","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734687850347,"stop":1734687850347,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"e9e9a5273b2e2665","reportUrl":"https://xguerreropau.github.io/gnss-sdr/9//#testresult/e9e9a5273b2e2665","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"8719e46fdeec7dcb","reportUrl":"https://xguerreropau.github.io/gnss-sdr/8//#testresult/8719e46fdeec7dcb","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"721a8b2138480926","reportUrl":"https://xguerreropau.github.io/gnss-sdr/7//#testresult/721a8b2138480926","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"ae9d2b1538cc86d0","reportUrl":"https://xguerreropau.github.io/gnss-sdr/6//#testresult/ae9d2b1538cc86d0","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"f1c4419550284cd6","reportUrl":"https://xguerreropau.github.io/gnss-sdr/3//#testresult/f1c4419550284cd6","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"f22a90bc0dd6eb8c","reportUrl":"https://xguerreropau.github.io/gnss-sdr/2//#testresult/f22a90bc0dd6eb8c","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"716a61904873cb80","reportUrl":"https://xguerreropau.github.io/gnss-sdr/1//#testresult/716a61904873cb80","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}},{"uid":"45bb9d55be473724","reportUrl":"https://xguerreropau.github.io/gnss-sdr/32//#testresult/45bb9d55be473724","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/filter/fir_filter_test.cc:375\nExpected: { filter->connect(top_block); auto source = std::make_shared<FileSignalSource>(config2.get(), \"Test_Source\", 0, 1, queue.get()); source->connect(top_block); interleaved_byte_to_complex_byte_sptr ibyte_to_cbyte_ = make_interleaved_byte_to_complex_byte(); auto null_sink = gr::blocks::null_sink::make(item_size); top_block->connect(source->get_right_block(), 0, ibyte_to_cbyte_, 0); top_block->connect(ibyte_to_cbyte_, 0, filter->get_left_block(), 0); top_block->connect(filter->get_right_block(), 0, null_sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the top_block.\n","time":{"start":1734688546312,"stop":1734688546312,"duration":0}}]},"tags":[]},"source":"91374b309f52acf8.json","parameterValues":[]}