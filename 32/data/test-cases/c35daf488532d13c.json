{"uid":"c35daf488532d13c","name":"ValidationOfResults","historyId":"GalileoE1PcpsAmbiguousAcquisitionTest:GalileoE1PcpsAmbiguousAcquisitionTest#ValidationOfResults","time":{"start":1734688546199,"stop":1734688546203,"duration":4},"status":"failed","statusMessage":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","statusTrace":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"GalileoE1PcpsAmbiguousAcquisitionTest"},{"name":"testClass","value":"GalileoE1PcpsAmbiguousAcquisitionTest"},{"name":"package","value":"GalileoE1PcpsAmbiguousAcquisitionTest"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"29936664e101f3e7","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734687850231,"stop":1734687850235,"duration":4}},{"uid":"e4b31486b04952bf","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976452,"stop":1734449976456,"duration":4}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"4cd51bc894627e94","reportUrl":"https://xguerreropau.github.io/gnss-sdr/31//#testresult/4cd51bc894627e94","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976452,"stop":1734449976456,"duration":4}},{"uid":"534c0159f088c23","reportUrl":"https://xguerreropau.github.io/gnss-sdr/30//#testresult/534c0159f088c23","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976452,"stop":1734449976456,"duration":4}},{"uid":"5f7d01d09cf837f2","reportUrl":"https://xguerreropau.github.io/gnss-sdr/29//#testresult/5f7d01d09cf837f2","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976452,"stop":1734449976456,"duration":4}},{"uid":"a5eddd581fb90ad8","reportUrl":"https://xguerreropau.github.io/gnss-sdr/28//#testresult/a5eddd581fb90ad8","status":"failed","statusDetails":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/acquisition/galileo_e1_pcps_ambiguous_acquisition_test.cc:351\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-test/thirdparty/\"); std::string file = path + \"signal_samples/Galileo_E1_ID_1_Fs_4Msps_8ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); top_block->connect(file_source, 0, acquisition->get_left_block(), 0); top_block->msg_connect(acquisition->get_right_block(), pmt::mp(\"events\"), msg_rx, pmt::mp(\"events\")); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of acquisition test.\n","time":{"start":1734449976452,"stop":1734449976456,"duration":4}}]},"tags":[]},"source":"c35daf488532d13c.json","parameterValues":[]}