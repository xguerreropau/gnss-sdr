{"uid":"cd8aa98c1629a46c","name":"ValidationOfResults","historyId":"GalileoE1DllPllVemlTrackingInternalTest:GalileoE1DllPllVemlTrackingInternalTest#ValidationOfResults","time":{"start":1734687850534,"stop":1734687850534,"duration":0},"status":"failed","statusMessage":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/tracking/galileo_e1_dll_pll_veml_tracking_test.cc:172\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/GSoC_CTTC_capture_2012_07_26_4Msps_4ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); gr::blocks::skiphead::sptr skip_head = gr::blocks::skiphead::make(sizeof(gr_complex), skiphead_sps); auto valve = gnss_sdr_make_valve(sizeof(gr_complex), num_samples, queue.get()); gr::blocks::null_sink::sptr sink = gr::blocks::null_sink::make(sizeof(Gnss_Synchro)); top_block->connect(file_source, 0, skip_head, 0); top_block->connect(skip_head, 0, valve, 0); top_block->connect(valve, 0, tracking->get_left_block(), 0); top_block->connect(tracking->get_right_block(), 0, sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of tracking test.\n","statusTrace":"/home/xavier/gnss-sdr/tests/unit-tests/signal-processing-blocks/tracking/galileo_e1_dll_pll_veml_tracking_test.cc:172\nExpected: { std::string path = std::string(\"/home/xavier/gnss-sdr/build-debug/thirdparty/\"); std::string file = path + \"signal_samples/GSoC_CTTC_capture_2012_07_26_4Msps_4ms.dat\"; const char* file_name = file.c_str(); gr::blocks::file_source::sptr file_source = gr::blocks::file_source::make(sizeof(gr_complex), file_name, false); gr::blocks::skiphead::sptr skip_head = gr::blocks::skiphead::make(sizeof(gr_complex), skiphead_sps); auto valve = gnss_sdr_make_valve(sizeof(gr_complex), num_samples, queue.get()); gr::blocks::null_sink::sptr sink = gr::blocks::null_sink::make(sizeof(Gnss_Synchro)); top_block->connect(file_source, 0, skip_head, 0); top_block->connect(skip_head, 0, valve, 0); top_block->connect(valve, 0, tracking->get_left_block(), 0); top_block->connect(tracking->get_right_block(), 0, sink, 0); } doesn't throw an exception.\n  Actual: it throws std::runtime_error with description \"can't open file\".\nFailure connecting the blocks of tracking test.\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"GalileoE1DllPllVemlTrackingInternalTest"},{"name":"testClass","value":"GalileoE1DllPllVemlTrackingInternalTest"},{"name":"package","value":"GalileoE1DllPllVemlTrackingInternalTest"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"cd8aa98c1629a46c.json","parameterValues":[]}