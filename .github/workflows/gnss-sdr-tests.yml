name: Test GNSS-SDR in a Raspberry Pi 5

on:
  workflow_dispatch:

jobs:
  cross-compile-gnss-sdr:
    runs-on: self-hosted
    steps:         
      - name: Clone gnss-sdr
        uses: actions/checkout@v4
        with:
          repository: 'gnss-sdr/gnss-sdr'
          path: gnss-sdr
          ref: next
          submodules: recursive
          fetch-depth: 0
          
      - name: Test gnss-sdr in the Raspberrypi 5
        run: |
            ssh root@10.1.3.134 gnss-sdr-tests/run_tests --gtest_color=no --gtest_output=json --gtest_filter="ReedSolomonE1BTest*"
            rsync -av root@10.1.3.134:/home/root/gnss-sdr-tests/test_detail.json /home/xavier/actions-runner/_work/gnss-sdr/gnss-sdr/gnss-sdr/

      - name: Create test summary
        uses: test-summary/action@dist
        with:
          paths: test_detail.json
          show: "all"
        if: always()

      - name: Parse and Display Test Results
        run: |
          pwd
          ls -las
          # Parse the JSON
          suite=$(jq -r '.testsuites[].name' test_detail.json)
          total=$(jq -r '.tests' test_detail.json)
          passed=$(jq -r '[.testsuites[].testsuite[] | select(.result == "COMPLETED")]|length' test_detail.json)
          failed=$(jq -r '.testsuites[].failures' test_detail.json)
          errors=$(jq -r '.testsuites[].errors' test_detail.json)

          echo "Test Suite: $suite"
          echo "Total Tests: $total"
          echo "Passed: $passed"
          echo "Failed: $failed"

          if [ "$failed" -gt 0 ]; then
            echo "Error Details:"
            echo "$errors" | jq -r '.[] | "Test: \(.test), Message: \(.message)"'
          fi
      
      #- name: Upload Test Report
      #  uses: dorny/test-reporter@v1
      #  with:
      #    name: Test Results
      #    path: /home/xavier/actions-runner/_work/gnss-sdr/gnss-sdr/gnss-sdr/test_detail.json
      #    reporter: json
